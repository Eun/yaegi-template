// Code generated by 'goexports debug/pe'. DO NOT EDIT.

// +build go1.11,!go1.12

package stdlib

import (
	"debug/pe"
	"reflect"
)

func init() {
	Symbols["debug/pe"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"COFFSymbolSize":                       reflect.ValueOf(pe.COFFSymbolSize),
		"IMAGE_DIRECTORY_ENTRY_ARCHITECTURE":   reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_ARCHITECTURE),
		"IMAGE_DIRECTORY_ENTRY_BASERELOC":      reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_BASERELOC),
		"IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT":   reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT),
		"IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR": reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR),
		"IMAGE_DIRECTORY_ENTRY_DEBUG":          reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_DEBUG),
		"IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT":   reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT),
		"IMAGE_DIRECTORY_ENTRY_EXCEPTION":      reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_EXCEPTION),
		"IMAGE_DIRECTORY_ENTRY_EXPORT":         reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_EXPORT),
		"IMAGE_DIRECTORY_ENTRY_GLOBALPTR":      reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_GLOBALPTR),
		"IMAGE_DIRECTORY_ENTRY_IAT":            reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_IAT),
		"IMAGE_DIRECTORY_ENTRY_IMPORT":         reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_IMPORT),
		"IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG":    reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG),
		"IMAGE_DIRECTORY_ENTRY_RESOURCE":       reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_RESOURCE),
		"IMAGE_DIRECTORY_ENTRY_SECURITY":       reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_SECURITY),
		"IMAGE_DIRECTORY_ENTRY_TLS":            reflect.ValueOf(pe.IMAGE_DIRECTORY_ENTRY_TLS),
		"IMAGE_FILE_MACHINE_AM33":              reflect.ValueOf(pe.IMAGE_FILE_MACHINE_AM33),
		"IMAGE_FILE_MACHINE_AMD64":             reflect.ValueOf(pe.IMAGE_FILE_MACHINE_AMD64),
		"IMAGE_FILE_MACHINE_ARM":               reflect.ValueOf(pe.IMAGE_FILE_MACHINE_ARM),
		"IMAGE_FILE_MACHINE_ARM64":             reflect.ValueOf(pe.IMAGE_FILE_MACHINE_ARM64),
		"IMAGE_FILE_MACHINE_EBC":               reflect.ValueOf(pe.IMAGE_FILE_MACHINE_EBC),
		"IMAGE_FILE_MACHINE_I386":              reflect.ValueOf(pe.IMAGE_FILE_MACHINE_I386),
		"IMAGE_FILE_MACHINE_IA64":              reflect.ValueOf(pe.IMAGE_FILE_MACHINE_IA64),
		"IMAGE_FILE_MACHINE_M32R":              reflect.ValueOf(pe.IMAGE_FILE_MACHINE_M32R),
		"IMAGE_FILE_MACHINE_MIPS16":            reflect.ValueOf(pe.IMAGE_FILE_MACHINE_MIPS16),
		"IMAGE_FILE_MACHINE_MIPSFPU":           reflect.ValueOf(pe.IMAGE_FILE_MACHINE_MIPSFPU),
		"IMAGE_FILE_MACHINE_MIPSFPU16":         reflect.ValueOf(pe.IMAGE_FILE_MACHINE_MIPSFPU16),
		"IMAGE_FILE_MACHINE_POWERPC":           reflect.ValueOf(pe.IMAGE_FILE_MACHINE_POWERPC),
		"IMAGE_FILE_MACHINE_POWERPCFP":         reflect.ValueOf(pe.IMAGE_FILE_MACHINE_POWERPCFP),
		"IMAGE_FILE_MACHINE_R4000":             reflect.ValueOf(pe.IMAGE_FILE_MACHINE_R4000),
		"IMAGE_FILE_MACHINE_SH3":               reflect.ValueOf(pe.IMAGE_FILE_MACHINE_SH3),
		"IMAGE_FILE_MACHINE_SH3DSP":            reflect.ValueOf(pe.IMAGE_FILE_MACHINE_SH3DSP),
		"IMAGE_FILE_MACHINE_SH4":               reflect.ValueOf(pe.IMAGE_FILE_MACHINE_SH4),
		"IMAGE_FILE_MACHINE_SH5":               reflect.ValueOf(pe.IMAGE_FILE_MACHINE_SH5),
		"IMAGE_FILE_MACHINE_THUMB":             reflect.ValueOf(pe.IMAGE_FILE_MACHINE_THUMB),
		"IMAGE_FILE_MACHINE_UNKNOWN":           reflect.ValueOf(pe.IMAGE_FILE_MACHINE_UNKNOWN),
		"IMAGE_FILE_MACHINE_WCEMIPSV2":         reflect.ValueOf(pe.IMAGE_FILE_MACHINE_WCEMIPSV2),
		"NewFile":                              reflect.ValueOf(pe.NewFile),
		"Open":                                 reflect.ValueOf(pe.Open),

		// type definitions
		"COFFSymbol":       reflect.ValueOf((*pe.COFFSymbol)(nil)),
		"DataDirectory":    reflect.ValueOf((*pe.DataDirectory)(nil)),
		"File":             reflect.ValueOf((*pe.File)(nil)),
		"FileHeader":       reflect.ValueOf((*pe.FileHeader)(nil)),
		"FormatError":      reflect.ValueOf((*pe.FormatError)(nil)),
		"ImportDirectory":  reflect.ValueOf((*pe.ImportDirectory)(nil)),
		"OptionalHeader32": reflect.ValueOf((*pe.OptionalHeader32)(nil)),
		"OptionalHeader64": reflect.ValueOf((*pe.OptionalHeader64)(nil)),
		"Reloc":            reflect.ValueOf((*pe.Reloc)(nil)),
		"Section":          reflect.ValueOf((*pe.Section)(nil)),
		"SectionHeader":    reflect.ValueOf((*pe.SectionHeader)(nil)),
		"SectionHeader32":  reflect.ValueOf((*pe.SectionHeader32)(nil)),
		"StringTable":      reflect.ValueOf((*pe.StringTable)(nil)),
		"Symbol":           reflect.ValueOf((*pe.Symbol)(nil)),
	}
}
